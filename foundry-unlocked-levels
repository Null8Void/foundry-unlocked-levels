foundry-unlocked-levels/
â”œâ”€â”€ module.json{
  "name": "unlocked-levels",
  "title": "Unlocked Levels (5e)",
  "description": "Raises the D&D 5e multiclassing level cap from 20 to 40.",
  "version": "1.0.0",
  "author": "Null8Void",
  "minimumCoreVersion": "10",
  "compatibleCoreVersion": "11",
  "systems": ["dnd5e"],
  "scripts": ["scripts/overrideLevelLimit.js"],
  "url": "https://github.com/YOUR_USERNAME/foundry-unlocked-levels",
  "manifest": "https://raw.githubusercontent.com/YOUR_USERNAME/foundry-unlocked-levels/main/module.json",
  "download": "https://github.com/YOUR_USERNAME/foundry-unlocked-levels/archive/refs/heads/main.zip"
}

â”œâ”€â”€ README.md
â””â”€â”€ scripts/
    â””â”€â”€ overrideLevelLimit.js
Hooks.once("ready", () => {
  const MAX_LEVEL = 40;

  const originalPrepareBaseData = CONFIG.Actor.documentClass.prototype.prepareBaseData;

  CONFIG.Actor.documentClass.prototype.prepareBaseData = function () {
    originalPrepareBaseData.call(this);

    if (this.type !== "character") return;

    const classes = this.classes ?? {};
    const totalLevels = Object.values(classes).reduce((sum, cls) => sum + (cls.system.levels ?? 0), 0);

    if (totalLevels > MAX_LEVEL) {
      ui.notifications.warn(`${this.name} has reached above level ${MAX_LEVEL}. This may require custom feature handling.`);
    }

    this.system.details.level = totalLevels;
  };

  console.log("ðŸ”“ Unlocked Levels (5e): Level cap raised to", MAX_LEVEL);
});

